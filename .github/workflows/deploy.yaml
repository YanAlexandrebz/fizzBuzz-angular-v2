name: Terraform Deploy

on:
  push:
    branches:
      - master
      - feature/terraform-aws-fiap

jobs:
  terraform:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: 'Terraform Init'
        run: terraform init

      #- name: 'Terraform Validate'
       # run: terraform validate

      - name: 'Terraform Plan'
        run: terraform plan -out=tfplan

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve tfplan

  build-and-push-docker-image:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 'Login to Amazon ECR'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 'Build Docker Image'
        run: |
          docker build -t my-app-fiap-ci-cd:latest .
          docker tag my-app-fiap-ci-cd:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-fiap-ci-cd:latest

      - name: 'Push Docker Image to ECR'
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-fiap-ci-cd:latest

  ecs:
    name: 'Update ECS Service'
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 'Update ECS Service'
        run: |
          aws ecs update-service --cluster my-cluster-fiap-yan --service my-application-service --force-new-deployment
